{"version":3,"sources":["logo.svg","components/card-item/card-item.jsx","components/card-list/card-list.jsx","components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["CardItem","props","className","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeHolder","handleChange","type","placeholder","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filterdMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAAe,I,YCEFA,EAAW,SAACC,GACrB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAK,wBAAwBF,EAAMG,QAAQC,GAAK,2BACrD,6BAAKJ,EAAMG,QAAQE,OACnB,4BAAIL,EAAMG,QAAQG,YCJjBC,G,MAAW,SAACP,GACrB,OACI,qBAAKC,UAAU,YAAf,SAEQD,EAAMQ,SAASC,KACX,SAAAN,GAAO,OACH,cAAC,EAAD,CAA2BA,QAAWA,GAAvBA,EAAQC,WCNlCM,G,YAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OAErB,uBAAOC,KAAK,SAASZ,UAAU,SAASa,YAAaH,EAAaI,SAAUH,MCuCjEI,E,kDAnCb,aAAe,IAAD,8BACZ,gBAkBFJ,aAAe,SAACK,GACd,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAlBpC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,SAASmB,S,oBAW7C,WACI,MAAgCC,KAAKN,MAApBH,GAAjB,EAAOX,SAAP,EAAiBW,aACXU,EAAkBD,KAAKN,MAAMd,SAASsB,QAAO,SAAA3B,GAAO,OAAGA,EAAQE,KAAK0B,cAAcC,SAASb,EAAYY,kBAC/G,OAAO,sBAAK9B,UAAU,MAAf,UACP,mDACE,cAAC,EAAD,CAAWU,YAAa,kBACbC,aAAcgB,KAAKhB,eAC9B,cAAC,EAAD,CAAUJ,SAAYqB,W,GA/BVI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5cc02e69.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport  './card-item.style.css'\r\nexport const CardItem = (props) => {\r\n    return (\r\n        <div className='card-container'>\r\n            <img src={'https://robohash.org/'+props.monster.id + '?set=set2&size=180x180'} />\r\n            <h1>{props.monster.name}</h1>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React from 'react';\r\nimport {CardItem} from \"../card-item/card-item\";\r\nimport './card-list.style.css'\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className='card-list'>\r\n            {\r\n                props.monsters.map(\r\n                    monster=> (\r\n                        <CardItem key={monster.id} monster = {monster} />\r\n                    )\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './search-box.style.css'\r\n\r\nexport const SearchBox = ({placeHolder,handleChange}) =>\r\n (\r\n    <input type=\"search\" className=\"search\" placeholder={placeHolder} onChange={handleChange} />\r\n)\r\n","import  react,{Component} from 'react';\nimport logo from './logo.svg';\nimport {CardList} from \"./components/card-list/card-list\";\nimport './App.css';\nimport {SearchBox} from \"./components/search-box/search-box\";\n\n\nclass App extends Component{\n\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\"\n    };\n    //this.handleChange = this.handleChange.bind(this);\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n        .then(response => response.json())\n        .then(users => this.setState({monsters:users}));\n\n   /* fetch(\"https://jsonplaceholder.typicode.com/userss\")\n        //.then(response => response.json())\n        .then(users => console.log(users))\n        .catch(error => console.log(error))\n    ;*/\n  }\n  handleChange = (e) => {\n    this.setState({searchField:e.target.value});\n  }\n  render() {\n      const {monsters, searchField} = this.state;\n      const filterdMonsters = this.state.monsters.filter(monster=> monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return <div className=\"App\">\n    <h1>Momnsters Rolodex</h1>\n      <SearchBox placeHolder ='Search monsters'\n                 handleChange={this.handleChange} />\n      <CardList monsters = {filterdMonsters}>\n      </CardList>\n    </div>;\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}